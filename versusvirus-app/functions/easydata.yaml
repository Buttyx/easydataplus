swagger: "2.0"
info:
  description: "Create new patient records and read, modify or delete existing records"
  version: "1.0.0"
  title: "Swagger EasyData+"
  contact:
    email: "vanessa.hunziker@ipt.ch"
host: "us-central1-versusvirus-273113.cloudfunctions.net"
basePath: "/webApi"
tags:
- name: "patientReport"
  description: "Patient Data"
- name: "login"
  description: "Login for accessing api functions"
schemes:
- "https"
paths:
  /case:
    post:
      tags:
      - "patientReport"
      summary: "Add a new patientReport to the BAG database"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Patient Report object that needs to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/PatientReport"
      responses:
        200:
          description: "Object creation successful, returns the identifier of the newly created object"
        400:
          description: "Invalid input"
      security: 
      - bearerAuth: []
  /cases:
    get:
      tags:
      - "patientReport"
      summary: "Get all available patientReports"
      description: ""
      produces:
      - "application/json"
      responses:
        200:
          description: "Returns all available cases"
        400:
          description: "Invalid input"
      security: 
      - bearerAuth: []
  /cases/{cantonId}:
    get:
      tags:
      - "patientReport"
      summary: "Get all available patientReports for a canton"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "cantonId"
        in: "path"
        description: "Canton ID to filter by"
        required: true
        type: string
      responses:
        200:
          description: "Returns all cases for given canton"
        400:
          description: "Invalid input"
      security: 
      - bearerAuth: []
  /case/{caseId}:
    get:
      tags:
      - "patientReport"
      summary: "Get reports by caseId"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "caseId"
        in: "path"
        description: "Case ID to filter by"
        required: true
        type: "string"
      responses:
        200:
          description: "Get patientReport for given case ID"
        400:
          description: "Invalid input"
      security: 
      - bearerAuth: []
    put:
      tags:
      - "patientReport"
      summary: "Updates a report by caseId"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "caseId"
        in: "path"
        description: "Case ID to filter by"
        required: true
        type: "string"
      responses:
        200:
          description: "Update successful"
        400:
          description: "Invalid input"
      security: 
      - bearerAuth: []
    delete:
      tags:
      - "patientReport"
      summary: "Deletes a report by caseId"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "caseId"
        in: "path"
        description: "Case ID to filter by"
        required: true
        type: "string"
      responses:
        204:
          description: "Deletion successful, no value returned"
        400:
          description: "Invalid input"
      security: 
      - bearerAuth: []
  /login:
    get:
      tags:
      - "login"
      summary: "Logs in an existing user and return a JWT Token to access api functions"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        in: "header"
        description: "Basic Authentication login information"
        required: true
        type: string
      responses:
        200:
          description: "Login successful, JWT is returned in body"
        401:
          description: "Invalid login information provided, not logged in"
      security:
      - basicAuth: []

securityDefinitions:
  bearerAuth:            
    type: apiKey
    in: header
    name: Authorization Bearer
  basicAuth:
    type: basic

definitions:
  PatientReport:
    type: "object"
    properties:
      patient:
        $ref: "#/definitions/Patient"
      manifestation:
        $ref: "#/definitions/Manifestation"
      grunderkrankung:
        $ref: "#/definitions/Grunderkrankung"
      verlauf:
        $ref: "#/definitions/Verlauf"
      exposition:
        $ref: "#/definitions/Exposition"
      labor:
        $ref: "#/definitions/Labor"
      bemerkungen:
        type: "string"
      _id:
        type: "string"
  Patient:
    type: "object"
    properties:
      ahvnr:
        type: "string"
      kanton:
        type: "string"
      geschlecht:
        type: "string"
  Manifestation:
    type: "object"
    properties:
      fieber:
        type: "boolean"
      husten:
        type: "boolean"
      atembeschwerden:
        type: "boolean"
      pneumonie:
        type: "boolean"
      ards:
        type: "boolean"
      durchfall:
        type: "boolean"
      andereSymptome:
        type: "string"
      keineSymptome:
        type: "boolean"
      manifestationsBeginn:
        type: "object"
  Grunderkrankung:
    type: "object"
    properties:
      diabetes:
        type: "boolean"
      herzKreislauf:
        type: "boolean"
      immunsuppression:
        type: "boolean"
      hypertonie:
        type: "boolean"
      chronischeAtemwegserkrankung:
        type: "boolean"
      krebs:
        type: "boolean"
      keineGrunderkrankung:
        type: "boolean"
      andereGrunderkrankung:
        type: "string"
  Verlauf:
    type: "object"
    properties:
      hospitalisierung:
        type: "boolean"
      ipsAufenthalt:
        type: "boolean"
      beatmung:
        type: "boolean"
      tod:
        type: "boolean"
      todesDatum:
        type: "object"
      spital:
        type: "string"
  Exposition:
    type: "object"
    properties:
      ch:
        type: "boolean"
      ausland:
        type: "boolean"
      ort:
        type: "string"
      unbekannt:
        type: "boolean"
      expositionDatum: 
        type: "object"
      wie:
        $ref: "#/definitions/ExpositionWie"
      reiset√§tigkeit:
        type: "boolean"
      medizinPflegePersonal:
        type: "boolean"
  ExpositionWie:
    type: "object"
    properties:
      kontaktZuCovidPositiv:
        type: "boolean"
      kontaktUnbekannt:
        type: "boolean"
      familie:
        type: "boolean"
      medizinPflegePersonal:
        type: "boolean"
      schule:
        type: "boolean"
      arbeit:
        type: "boolean"
      andere:
        type: "string"
  Labor:
    type: "object"
    properties:
      laborGenf: 
        type: "boolean"
      anderesLabor: 
        type: "boolean"
      entnahmeDatum: 
        type: "object"